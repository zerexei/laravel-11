AWSTemplateFormatVersion: 2010-09-09

Resources:
  EC2Role:
    Type: AWS::IAM::ROLE
    Properties:
      RoleName: laracasts-ec2-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - ec2.amazonaws.com
          Action:
            -  sts.AssumeRole

  InstancePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: laracasts-ec2-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Resource: "*"
            Action:
              - s3:*
              - sqs:*
      Roles:
        - !ref EC2Role
    
  InstanceProfile:
    Type: AWS::Iam::InstanceProfile
    Roles:
      - !Ref EC2Role

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: laracasts-launch-template
      LaunchTemplateData:
        ImageId: ami-053b0d53c279acc0
        KeyName: laracastssec2
        InstanceType: t2.micro
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        SecurityGroupIds:
          - !ImportantValue laracast-vpc-EC2SecurityGroup

      EC2Instance1:
        Type: AWS::EC2::Instance
        Properties:
          SubnetId: !ImportantValue laracasts-vpc-PublicSubnetOne
          LaunchTemplate:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Tags:
            - key: Name
              Value: laracasts-1

      EC2Instance1:
        Type: AWS::EC2::Instance
        Properties:
          SubnetId: !ImportantValue laracasts-vpc-PublicSubnetTwi
          LaunchTemplate:
            LaunchTemplateId: !Ref LaunchTemplate
            Version: !GetAtt LaunchTemplate.LatestVersionNumber
          Tags:
            - key: Name
              Value: laracasts-2
          
      ApplicationLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Scheme: internet-facing
          SecurityGroups:
            - !ImportantValue laracasts-vpc-LoadBalancerSecurityGroup
          Subnets:
            - !ImportantValue laracasts-vpc-PublicSubnetOne
            - !ImportantValue laracasts-vpc-PublicSubnetTwi

      EC2TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
          Name: StagingWebTargetGroup
          Protocol: HTTP
          ProtocolVersion: HTTP1
          VpcId: !ImportantValue laracasts-vpc-VPC
          port: 80
          TargetGroupAttributes:
            - Key: deregistration_delay.timeout_seconds
              Value: 31
          Targets:
            - Id: !Ref EC2Instance1
            - Id: !Ref EC2Instance2
          HealthCheckIntervalSeconds: 30
          HealthCheckTimeoutSeconds: 30
          UnhealthyThresholdCount: 2
          HealthyThresholdCount: 5
          HealthCheckPath: /

      ALBHTTPListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
          LoadBalancerArn: !Ref ApplicationLoadBalancer
          Protocol: HTTP
          Port: 80
          DefaultActions:
            - Type: redirect
              RedirectCOnfig:
                Protocol: "HTTPS"
                Port: 443
                Host: "#{host}"
                Path: "/#{path}"
                Query: "#{query}"
                StatusCode: "HTTP_301"

      ALBHTTPListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
          LoadBalancerArn: !Ref ApplicationLoadBalancer
          Protocol: HTTPS
          Port: 443
          Certificates:
            - CertificateArn: arn:aws:acm:us-east-1:1234
          DefaultActions:
            - Type: forward
            ForwardConfig:
              TargetGroups:
                - TargetGroupArn: !Ref EC2TargetGroup
                  Weight: 1

Outputs:
  EC2Instance1PublicIpAddress:
    Value: !GetAtt EC2Instance1.PublicIp
  EC2Instance2PublicIpAddress:
    Value: !GetAtt EC2Instance2.PublicIp
  LoadBalancerDNS:
    Value: !GetAtt ApplicationLoadBalancer.DNSName



  # aws cloudformation deploy --region=us-east-1 --stack-name=laracasts-web --template-file ./.aws/infrastructure.yml --capabilities CAPABILITY_IAM --capabilities CAPABILITY_NAMED_IAM